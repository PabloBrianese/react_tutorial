{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Pablo/Documents/GitHub/react_tutorial/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction calculateGameResult(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  if (squares.every(x => x)) return 'draw';\n  return null;\n}\n\nfunction calculateWinningLine(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let line of lines) {\n    const [a, b, c] = line;\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return line;\n    }\n  }\n\n  return null;\n}\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    style: props.style,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nfunction Board(props) {\n  const winningLine = props.winningLine;\n\n  function renderSquare(i) {\n    const winningSquare = winningLine ? winningLine.includes(i) : false;\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: props.squares[i],\n      onClick: () => props.onClick(i),\n      style: {\n        backgroundColor: winningSquare ? '#ccc' : 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  const squareRenderings = Array.from(Array(9), (x, i) => renderSquare(i));\n  const boardRows = Array.from(Array(3), (x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: squareRenderings.slice(3 * i, 3 * i + 3)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: boardRows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Board;\n\nfunction PlayersMove(props) {\n  const boardDifferencePoint = (board1, board2) => {\n    for (let i = 0; i < board1.length; ++i) if (board1[i] !== board2[i]) return i;\n\n    return null;\n  };\n\n  function squareCoordinates(squareIndex) {\n    return {\n      x: squareIndex % 3 + 1,\n      y: Math.floor(squareIndex / 3) + 1\n    };\n  }\n\n  if (props.hist.length > props.move + 1) {\n    const boardEnd = props.hist[props.move + 1].squares; // board at the end of move\n\n    const boardBeginning = props.step.squares; // board at the beginning of move\n\n    const squareIndex = boardDifferencePoint(boardEnd, boardBeginning);\n    const selectedSquare = squareCoordinates(squareIndex);\n    const selectedSquareString = JSON.stringify(selectedSquare).replace(/\"/g, '');\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [player(props.move), \" picks \", \" \", \" \", selectedSquareString]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_c3 = PlayersMove;\n\nconst player = move => !(move % 2) ? 'X' : 'O';\n\nfunction TimeTravelButton(props) {\n  const timeTravelDesc = props.move ? 'Go to move #' + props.move : 'Go to game start';\n  const fontWeight = props.move === props.stepNumber ? \"bold\" : \"normal\";\n\n  function jumpTo(move) {\n    props.setState({\n      stepNumber: move\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => jumpTo(props.move),\n    style: {\n      fontWeight: fontWeight\n    },\n    children: timeTravelDesc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = TimeTravelButton;\n\nfunction HistoryOrderSwitchButton(props) {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    class: \"switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: () => props.onClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 10\n  }, this);\n}\n\n_c5 = HistoryOrderSwitchButton;\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      historyOrderAscending: true\n    };\n  }\n\n  setStepNumber(newStep) {\n    this.setState({\n      stepNumber: newStep\n    });\n  }\n\n  changeHistoryOrder() {\n    const currentValue = this.state.historyOrderAscending;\n    this.setState({\n      historyOrderAscending: !currentValue\n    });\n  }\n\n  handleClick(i) {\n    const state = this.state;\n    const history = state.history.slice(0, state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateGameResult(squares) || squares[i]) return;\n    squares[i] = player(state.stepNumber);\n    this.setState({\n      history: history.concat([{\n        squares\n      }]),\n      stepNumber: history.length\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const gameResult = calculateGameResult(current.squares);\n    const status = {\n      'X': 'Winner: X',\n      'O': 'Winner: O',\n      'draw': 'The game ended in a draw',\n      null: 'Next player: ' + player(this.state.stepNumber)\n    }[gameResult];\n    const winningLine = gameResult === 'X' || gameResult === 'O' ? calculateWinningLine(current.squares) : null;\n    const moves = history.map((step, move, hist) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(TimeTravelButton, {\n          move: move,\n          stepNumber: this.state.stepNumber,\n          setState: obj => this.setState(obj)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayersMove, {\n          step: step,\n          move: move,\n          hist: hist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, move, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this);\n    });\n    const reversedMoves = moves.map(x => x).reverse();\n    const renderedMoves = this.state.historyOrderAscending ? moves : reversedMoves;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(HistoryOrderSwitchButton, {\n          onClick: () => this.changeHistoryOrder()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tic-tac-toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          winningLine: winningLine,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: renderedMoves\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 240,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"PlayersMove\");\n$RefreshReg$(_c4, \"TimeTravelButton\");\n$RefreshReg$(_c5, \"HistoryOrderSwitchButton\");","map":{"version":3,"sources":["/mnt/c/Users/Pablo/Documents/GitHub/react_tutorial/my-app/src/index.js"],"names":["React","ReactDOM","calculateGameResult","squares","lines","i","length","a","b","c","every","x","calculateWinningLine","line","Square","props","onClick","style","value","Board","winningLine","renderSquare","winningSquare","includes","backgroundColor","squareRenderings","Array","from","boardRows","slice","PlayersMove","boardDifferencePoint","board1","board2","squareCoordinates","squareIndex","y","Math","floor","hist","move","boardEnd","boardBeginning","step","selectedSquare","selectedSquareString","JSON","stringify","replace","player","TimeTravelButton","timeTravelDesc","fontWeight","stepNumber","jumpTo","setState","HistoryOrderSwitchButton","Game","Component","constructor","state","history","fill","historyOrderAscending","setStepNumber","newStep","changeHistoryOrder","currentValue","handleClick","current","concat","render","gameResult","status","null","moves","map","obj","reversedMoves","reverse","renderedMoves","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css';\r\n\r\nfunction calculateGameResult(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n\r\n  if (squares.every(x => x)) return 'draw';\r\n\r\n  return null;\r\n}\r\n\r\nfunction calculateWinningLine(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let line of lines) {\r\n    const [a, b, c] = line;\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return line;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick} style={props.style}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Board(props) {\r\n  const winningLine = props.winningLine;\r\n  function renderSquare(i) {\r\n    const winningSquare = (winningLine) ? winningLine.includes(i) : false;\r\n    return (\r\n      <Square\r\n        value={props.squares[i]}\r\n        onClick={() => props.onClick(i)}\r\n        style={{ backgroundColor: (winningSquare) ? '#ccc' : 'white' }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const squareRenderings = Array.from(Array(9), (x, i) => renderSquare(i));\r\n  const boardRows = Array.from(Array(3), (x, i) => \r\n    <div className=\"board-row\">\r\n      {squareRenderings.slice(3*i, 3*i + 3)}\r\n    </div>\r\n  );\r\n\r\n  return <div>{boardRows}</div>;\r\n}\r\n\r\nfunction PlayersMove(props) {\r\n  const boardDifferencePoint = (board1, board2) => {\r\n    for (let i = 0; i < board1.length; ++i)\r\n      if (board1[i] !== board2[i]) return i;\r\n\r\n    return null;\r\n  }\r\n\r\n  function squareCoordinates(squareIndex) {\r\n    return {\r\n      x: squareIndex % 3 + 1,\r\n      y: Math.floor(squareIndex / 3) + 1,\r\n    };\r\n  }\r\n\r\n  if (props.hist.length > props.move + 1) {\r\n    const boardEnd = props.hist[props.move + 1].squares;  // board at the end of move\r\n    const boardBeginning = props.step.squares;  // board at the beginning of move\r\n    const squareIndex = boardDifferencePoint(boardEnd, boardBeginning);\r\n    const selectedSquare = squareCoordinates(squareIndex);\r\n    const selectedSquareString = JSON.stringify(selectedSquare)\r\n      .replace(/\"/g, '');\r\n\r\n    return (\r\n      <p>\r\n        {player(props.move)} picks {\" \"} {selectedSquareString}\r\n      </p>\r\n    );\r\n  }\r\n  else {\r\n    return (null);\r\n  }\r\n}\r\n\r\nconst player = move => !(move % 2) ? 'X' : 'O';\r\n\r\nfunction TimeTravelButton(props) {\r\n  const timeTravelDesc = props.move ?\r\n    'Go to move #' + props.move :\r\n    'Go to game start';\r\n  const fontWeight = props.move === props.stepNumber ? \"bold\" : \"normal\";\r\n\r\n  function jumpTo(move) {\r\n    props.setState({\r\n      stepNumber: move,\r\n    });\r\n  }  \r\n\r\n  return (\r\n    <button\r\n      onClick={() => jumpTo(props.move)}\r\n      style={{fontWeight: fontWeight}}\r\n    >\r\n      {timeTravelDesc}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction HistoryOrderSwitchButton(props) {\r\n  return <label class=\"switch\">\r\n    <input type=\"checkbox\" onClick={() => props.onClick()} />\r\n    <span class=\"slider\" />\r\n  </label>;\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n      stepNumber: 0,\r\n      historyOrderAscending: true,\r\n    }\r\n  }\r\n\r\n  setStepNumber(newStep) {\r\n    this.setState({ stepNumber: newStep });\r\n  }\r\n\r\n  changeHistoryOrder() {\r\n    const currentValue = this.state.historyOrderAscending;\r\n    this.setState({ historyOrderAscending: !currentValue });\r\n  }\r\n\r\n  handleClick(i) {\r\n    const state = this.state;\r\n    const history = state.history.slice(0, state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateGameResult(squares) || squares[i]) return;\r\n\r\n    squares[i] = player(state.stepNumber);\r\n\r\n    this.setState({\r\n      history: history.concat([{squares}]),\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const gameResult = calculateGameResult(current.squares);\r\n    const status = {\r\n      'X': 'Winner: X',\r\n      'O': 'Winner: O',\r\n      'draw': 'The game ended in a draw',\r\n      null: 'Next player: ' + player(this.state.stepNumber),\r\n    }[gameResult];\r\n\r\n    const winningLine = (gameResult === 'X' || gameResult === 'O') ?\r\n      calculateWinningLine(current.squares): null;\r\n\r\n    const moves = history.map((step, move, hist) => {\r\n      return (\r\n        <li key={move}>\r\n          <TimeTravelButton\r\n            move={move}\r\n            stepNumber={this.state.stepNumber}\r\n            setState={obj => this.setState(obj)}\r\n          />\r\n          <PlayersMove step={step} move={move} hist={hist} /> \r\n        </li>\r\n      );\r\n    })\r\n\r\n    const reversedMoves = moves.map(x => x).reverse()\r\n    const renderedMoves = (this.state.historyOrderAscending) ?\r\n      moves :\r\n      reversedMoves;\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <header>\r\n          <HistoryOrderSwitchButton\r\n            onClick={() => this.changeHistoryOrder()}\r\n          />\r\n        </header>\r\n        <h1>Tic-tac-toe</h1>\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            winningLine={winningLine}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <div>\r\n            <ul>{renderedMoves}</ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"]},"metadata":{},"sourceType":"module"}